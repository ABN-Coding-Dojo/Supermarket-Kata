<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.suupaamaaketto</groupId>
  <artifactId>api</artifactId>
  <name>Sūpāmāketto</name>
  <description>A Java implementation of a SuperMarket API.</description>
  <version>1.0.0-SNAPSHOT</version>

  <parent>
    <groupId>com.abnamro.coesd</groupId>
    <artifactId>master-pom</artifactId>
    <version>4.1.0</version>
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jupiter.java.library.version>5.9.3</jupiter.java.library.version>
    <sl4j.java.library.version>2.0.7</sl4j.java.library.version>
    <jdk.version>1.11</jdk.version>
    <revision>1.0.0-SNAPSHOT</revision>
    <sonar.coverage.exclusions>
    </sonar.coverage.exclusions>
  </properties>

  <licenses>
    <license>
      <name>MIT License</name>
      <url>http://www.opensource.org/licenses/mit-license.php</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <dependencies>
    <!-- auto getters and setters and other utilities -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.26</version>
    </dependency>
    <!-- GSON for JSON -->
    <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>2.10.1</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${sl4j.java.library.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.slf4j/jcl-over-slf4j -->
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${sl4j.java.library.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-simple -->
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>${sl4j.java.library.version}</version>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${jupiter.java.library.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${jupiter.java.library.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${jupiter.java.library.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>5.3.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.1.2</version>
          <executions>
            <execution>
              <id>copy-dependencies</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>copy-dependencies</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.directory}/lib</outputDirectory>
                <overWriteReleases>false</overWriteReleases>
                <overWriteSnapshots>false</overWriteSnapshots>
                <overWriteIfNewer>true</overWriteIfNewer>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>1.2.5</version>
          <configuration>
            <updatePomFile>true</updatePomFile>
            <flattenedPomFilename>flattened-pom.xml</flattenedPomFilename>
            <flattenMode>resolveCiFriendliesOnly</flattenMode>
          </configuration>
          <executions>
            <execution>
              <id>flatten</id>
              <phase>process-resources</phase>
              <goals>
                <goal>flatten</goal>
              </goals>
            </execution>
            <execution>
              <id>flatten.clean</id>
              <phase>clean</phase>
              <goals>
                <goal>clean</goal>
              </goals>
            </execution>
          </executions>

        </plugin>
        <plugin>
          <groupId>org.pitest</groupId>
          <artifactId>pitest-maven</artifactId>
          <version>1.13.0</version>
          <configuration>
            <reportsDirectory>${project.build.directory}/pit-reports</reportsDirectory>
            <targetClasses>
              <param>org.suupaamaaketto.api.*</param>
            </targetClasses>
            <targetTests>
              <!-- baseline test shows you how the mutation test finds a missing scenario -->
              <param>org.suupaamaaketto.api.*</param>
              <!-- mutation test shows that an additional test scenario is required to cover all possibilities  -->
              <!-- <param>org.abnamro.testing.mutations*</param>-->
              <!-- mutation test shows an equivalent mutation  -->
              <!-- <param>org.abnamro.testing.baseline.equivalent*</param>-->
            </targetTests>
            <!-- example on how to exclude calls outside the test scope preventing equivalent mutations -->
            <!-- <avoidCallsTo>-->
            <!--     <avoidCallsTo>java.util.logging</avoidCallsTo>-->
            <!--     <avoidCallsTo>org.apache.log4j</avoidCallsTo>-->
            <!--     <avoidCallsTo>org.slf4j</avoidCallsTo>-->
            <!--     <avoidCallsTo>org.apache.commons.logging</avoidCallsTo>-->
            <!-- </avoidCallsTo>-->
            <mutationThreshold>80</mutationThreshold>
            <timestampedReports>false</timestampedReports>
            <mutators>
              <!-- <value>STRONGER</value> -->
              <value>ALL</value>
            </mutators>
            <!-- in comment xml for output to sonar -->
            <outputFormats>
              <outputFormat>html</outputFormat>
              <outputFormat>xml</outputFormat>
            </outputFormats>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.pitest</groupId>
              <artifactId>pitest-junit5-plugin</artifactId>
              <version>1.1.2</version>
            </dependency>
          </dependencies>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.7</version>
        <configuration>
          <excludes>
            <exclude>**/*Exception.class</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-artifact</id>
            <phase>package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>${project.artifactId}</artifactId>
                  <version>${project.version}</version>
                  <type>${project.packaging}</type>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${stagingDirectory}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
